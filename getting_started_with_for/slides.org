#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [presentation]
#+BEAMER_FRAME_LEVEL: 1

#+BEAMER_HEADER_EXTRA: \usetheme{Warsaw}\usecolortheme{default}\useoutertheme{infolines}\setbeamercovered{transparent}
#+COLUMNS: %45ITEM %10BEAMER_env(Env) %10BEAMER_envargs(Env Args) %4BEAMER_col(Col) %8BEAMER_extra(Extra)
#+PROPERTY: BEAMER_col_ALL 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 :ETC

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [presentation]

#+LaTeX_HEADER: \usepackage[english]{babel} \usepackage{ae,aecompl}
#+LaTeX_HEADER: \usepackage{mathpazo,courier,euler} \usepackage[scaled=.95]{helvet}

#+LaTeX_HEADER: \usepackage{listings}

#+LaTeX_HEADER:\lstset{language=Python, basicstyle=\ttfamily\bfseries,
#+LaTeX_HEADER:  commentstyle=\color{red}\itshape, stringstyle=\color{darkgreen},
#+LaTeX_HEADER:  showstringspaces=false, keywordstyle=\color{blue}\bfseries}

#+TITLE: 
#+AUTHOR: FOSSEE
#+EMAIL:     
#+DATE:    

#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:nil pri:nil tags:not-in-toc

* 
  #+begin_latex
\begin{center}
\vspace{12pt}
\textcolor{blue}{\huge Getting started with \texttt{for}}
\end{center}
\vspace{18pt}
\begin{center}
\vspace{10pt}
\includegraphics[scale=0.95]{../images/fossee-logo.png}\\
\vspace{5pt}
\scriptsize Developed by FOSSEE Team, IIT-Bombay. \\ 
\scriptsize Funded by National Mission on Education through ICT\\
\scriptsize  MHRD,Govt. of India\\
\includegraphics[scale=0.30]{../images/iitb-logo.png}\\
\end{center}

#+end_latex
* Objectives
  At the end of this tutorial, you will be able to, 
  - Write blocks of code in python.
  - Use the ``for`` loop.
  - Use ``range()`` function.
  - Write blocks in python interpreter
  - Write blocks in ipython interpreter.
* Whitespace in Python
  - Whitespace is significant
    - blocks are visually separated
  - Blocks are indented using 4 spaces
    : Block A
    : Block A
    :     Block B
    :     Block B
    : Block A
    ~Block B~ is an inner block and is indented using 4 spaces
* Question 1
  Write a ~for~ loop which iterates through a list of numbers and find
  the square root of each number.
  : 
  The numbers are,
  : 1369, 7225, 3364, 7056, 5625, 729, 7056, 
  : 576, 2916
* Solution 1
  - Open text editor and type the following code
  #+begin_src python
    numbers = [1369, 7225, 3364, 7056, 5625, 729, 7056, 
               576, 2916]

    for each in numbers:
        print "Square root of", each, "is", sqrt(each)

    print "This is not in for loop!"
  #+end_src
* Save \& run script
  - Save the script as ~list_roots.py~
  - Run in ~ipython~ interpreter as,
    : In []: %run -i list_roots.py
* Question 2
  Print the square root of numbers in the list.
  : 
  Numbers are,
  : 7225, 3268, 3364, 2966, 7056, 5625, 729, 5547, 
  : 7056, 576, 2916
* Question 3
  Find out the cube of all the numbers from 1 to 10.
  : 
  /do it in the python interpreter/
* ~range()~ function
  - in built function in Python
  - generates a list of integers
    - /syntax:/ range([start,] stop[, step])
    - /example:/
      - range(1, 20) - /generates integers from 1 to 20/
      - range(20) - /generates integers from 0 to 20/
* Question 4
  Print all the odd numbers from 1 to 50.
* Summary
  In this tutorial,we learnt to,
  - Create blocks in python using ``for
  - Indent the blocks of code
  - Iterate over a list using ``for`` loop
  - Use the ``range()`` function
* Evaluation
  1. Indentation is not mandatory in Python

     - True
     - False

  2. Write a code using ``for`` loop to print the product of all 
     natural numbers from 1 to 20.


  3. What will be the output of-
     range(1,5)
* Solutions
  1. False

  2. y = 1
     for x in range(1,21):
          y*=x
     print y
  
  3. [1,2,3,4]
* 
#+begin_latex
  \begin{block}{}
  \begin{center}
  \textcolor{blue}{\Large THANK YOU!} 
  \end{center}
  \end{block}
\begin{block}{}
  \begin{center}
    For more Information, visit our website\\
    \url{http://fossee.in/}
  \end{center}  
  \end{block}
#+end_latex


